<%- include('./partials/header') %>

<main class="flex-1 py-12 bg-gray-50">
    <div class="container mx-auto px-6 lg:px-20 flex flex-col lg:flex-row gap-8">
        <!-- Cart Items -->
        <div class="w-full lg:w-2/3">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Your Cart</h2>
            <% if (user.cart && user.cart.length > 0) { %>
                <div class="space-y-6">
                    <% user.cart.forEach((item, index) => { %>
                        <div class="bg-white rounded-xl shadow-md overflow-hidden cart-item" data-id="<%= item._id %>">
                            <div class="flex flex-col sm:flex-row">
                                <div class="w-full sm:w-1/3 h-64 flex items-center justify-center bg-[<%= item.bgcolor %>]">
                                    <img class="h-48 object-contain" src="data:image/jpeg;base64,<%= item.image.toString('base64') %>" alt="<%= item.name %>">
                                </div>
                                <div class="w-full sm:w-2/3 p-6">
                                    <h3 class="text-xl font-semibold text-gray-800"><%= item.name %></h3>
                                    <div class="flex items-center gap-3 mt-4">
                                        <button class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center minus-btn cursor-pointer hover:bg-gray-300">
                                            <i class="ri-subtract-line"></i>
                                        </button>
                                        <span class="px-3 py-1 bg-gray-50 border rounded-md quantity-display" data-price="<%= Number(item.price) - Number(item.discount) %>">01</span>
                                        <button class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center plus-btn cursor-pointer hover:bg-gray-300">
                                            <i class="ri-add-line"></i>
                                        </button>
                                    </div>
                                    <h4 class="text-lg font-medium text-gray-800 mt-4 item-price">₹ <%= Number(item.price) - Number(item.discount) %></h4>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </div>
            <% } else { %>
                <div class="bg-white rounded-xl shadow-md p-6 text-center">
                    <h3 class="text-lg font-semibold text-gray-600">Your cart is empty</h3>
                    <a href="/shop" class="mt-4 inline-block px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">Shop Now</a>
                </div>
            <% } %>
        </div>
        <!-- Price Breakdown -->
        <div class="w-full lg:w-1/3">
            <div class="bg-white rounded-xl shadow-md p-6 sticky top-24">
                <h3 class="text-xl font-semibold text-gray-800 mb-4">Price Breakdown</h3>
                <% let totalMRP = 0; let totalDiscount = 0; %>
                <% user.cart.forEach((item) => { %>
                    <% totalMRP += Number(item.price); %>
                    <% totalDiscount += Number(item.discount); %>
                <% }); %>
                <div class="space-y-3">
                    <div class="flex justify-between">
                        <span class="text-gray-600">Total MRP</span>
                        <span id="total-mrp" class="font-medium">₹ <%= totalMRP %></span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Discount on MRP</span>
                        <span id="total-discount" class="font-medium text-green-600">₹ <%= totalDiscount %></span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Platform Fee</span>
                        <span class="font-medium">₹ 20</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">Shipping Fee</span>
                        <span class="font-medium text-green-600">FREE</span>
                    </div>
                    <div class="border-t border-gray-200 pt-4 mt-4">
                        <div class="flex justify-between">
                            <span class="text-lg font-semibold text-gray-800">Total Amount</span>
                            <span id="total-amount" class="text-lg font-semibold text-green-600">₹ <%= bill %></span>
                        </div>
                    </div>
                </div>
                <button class="w-full mt-6 py-3 bg-teal-500 text-white rounded-lg hover:bg-teal-600 transition font-semibold">Proceed to Checkout</button>
            </div>
        </div>
    </div>
</main>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const plusButtons = document.querySelectorAll('.plus-btn');
        const minusButtons = document.querySelectorAll('.minus-btn');
        
        plusButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                const cartItem = this.closest('.cart-item');
                const quantityDisplay = cartItem.querySelector('.quantity-display');
                const itemPrice = cartItem.querySelector('.item-price');
                const productId = cartItem.dataset.id;
                
                let quantity = parseInt(quantityDisplay.textContent);
                quantity += 1;
                
                quantityDisplay.textContent = quantity.toString().padStart(2, '0');
                const unitPrice = parseFloat(quantityDisplay.dataset.price);
                itemPrice.textContent = `₹ ${(unitPrice * quantity).toFixed(2)}`;
                
                updateCartQuantity(productId, quantity);
                updateTotals();
            });
        });
        
        minusButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                const cartItem = this.closest('.cart-item');
                const quantityDisplay = cartItem.querySelector('.quantity-display');
                const itemPrice = cartItem.querySelector('.item-price');
                const productId = cartItem.dataset.id;
                
                let quantity = parseInt(quantityDisplay.textContent);
                if (quantity > 1) {
                    quantity -= 1;
                    quantityDisplay.textContent = quantity.toString().padStart(2, '0');
                    const unitPrice = parseFloat(quantityDisplay.dataset.price);
                    itemPrice.textContent = `₹ ${(unitPrice * quantity).toFixed(2)}`;
                    updateCartQuantity(productId, quantity);
                    updateTotals();
                } else {
                    removeFromCart(productId, cartItem);
                }
            });
        });
        
        function updateCartQuantity(productId, quantity) {
            fetch(`/update-cart-quantity/${productId}/${quantity}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => response.json())
            .then(data => console.log('Cart updated:', data))
            .catch(error => console.error('Error updating cart:', error));
        }
        
        function removeFromCart(productId, cartItemElement) {
            fetch(`/remove-from-cart/${productId}`, { method: 'DELETE' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    cartItemElement.remove();
                    updateTotals();
                    if (document.querySelectorAll('.cart-item').length === 0) {
                        location.reload();
                    }
                }
            })
            .catch(error => console.error('Error removing item from cart:', error));
        }
        
        function updateTotals() {
            const cartItems = document.querySelectorAll('.cart-item');
            let totalAmount = 20;
            let totalMRP = 0;
            let totalDiscount = 0;
            
            cartItems.forEach(item => {
                const quantityDisplay = item.querySelector('.quantity-display');
                const quantity = parseInt(quantityDisplay.textContent);
                const unitPrice = parseFloat(quantityDisplay.dataset.price);
                totalAmount += unitPrice * quantity;
            });
            
            document.getElementById('total-amount').textContent = `₹ ${totalAmount.toFixed(2)}`;
        }
    });
</script>

<%- include('./partials/footer') %>